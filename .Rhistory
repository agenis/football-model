#geom_path(size=2, color="orange", alpha=0.7) +
geom_point(alpha=0.3, size=0.8, color="darkblue") +
ggtitle("2D Lidar of your data", subtitle = paste0("file: ", filename))
install.packages("plumber")
POST(url = 'http://localhost:8000/predict?am=1&qsec=16.46&wt=2.62') %>% content()
library(dplyr)
POST(url = 'http://localhost:8000/predict?am=1&qsec=16.46&wt=2.62') %>% content()
library(googleComputeEngineR)
iinstall.packages("googleComputeEngineR")
install.packages("googleComputeEngineR")
library(googleComputeEngineR)
vm <- gce_vm(template = "rstudio",
name = "my-rstudio",
username = "marc.agenis@gmail.com", password = "flpuk5Lfjdkslqm",
predefined_type = "f1-micro")
vm <- gce_vm(project="foot", template = "rstudio",
name = "my-rstudio",
username = "marc.agenis@gmail.com", password = "flpuk5Lfjdkslqm",
predefined_type = "f1-micro")
gce_list_instances()
gce_list_instances(project="foot")
?googleComputeEngineR
library(googleComputeEngineR)
vm <- gce_vm(template = "rstudio", name = "rstudio-server", username = "mark", password = "mark1234")
gce_auth()
gce_get_project()
plot(dnorm(1:100))
plot(dnorm(-10,10))
plot(dnorm(-10:10))
plot(dnorm(seq(-10,10, 0.01)))
qnorm(0.5)
dnorm(0.5)
qnorm(0.95)
qnorm(0.5)
qnorm(1)
qnorm(0.999)
qnorm(0.1)
qnorm(0.5)
?qnorm
qnorm(0.5, 0, sd=10)
pnorm
pnorm(0)
pnorm(-5)
pnorm(-5, sd=10)
x = seq(-20,20,0.1)
y=qnorm(x, sd=10, mean=0)
y=pnorm(x, sd=10, mean=0)
plot(x=x, y=y)
dnorm
?dnorm
y=dnorm(x, sd=10, mean=0)
plot(x=x, y=y)
y=dnorm(x, sd=5, mean=0)
plot(x=x, y=y)
y=dnorm(x, sd3mean=0)
y=dnorm(x, sd=3, mean=0)
plot(x=x, y=y)
y=dnorm(x, sd=4, mean=0)
plot(x=x, y=y)
qnorm(0.25, mean=0, sd=1)
qnorm(0.25, mean=0, sd=4)
qnorm(0.25, mean=0, sd=5)
qnorm(0.25, mean=0, sd=6)
qnorm(0.25, mean=0, sd=7)
qnorm(0.25, mean=0, sd=7.5)
qnorm(0.25, mean=0, sd=7.4)
qnorm(0.75, mean=0, sd=7.4)#5
qnorm(0.05, mean=0, sd=7.4)
pi
360*2*pi/360
atan(qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*0.2
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*20
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*35
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*60
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*100
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*20*2
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*35*2
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*60*2
atan(-qnorm(0.05, mean=0, sd=7.4)*(2*pi)/360)*100*2
atan(58/360/2/3.1416)
atan(58/360/2/3.1416)*20
atan(58/360/2/3.1416)*20*2
tan(58/360/2/3.1416)*20*2
tan(58/360*2*3.1416)*20*2
tan(58/360*2*3.1416/2)*20*2
tan(58/360*2*3.1416/2)*35*2
tan(58/360*2*3.1416/2)*60*2
setwd("~/ADMIN/The Nuum Factory/foot")
library(googleComputeEngineR)
library(googleComputeEngineR)
vm <- gce_vm(template = "rstudio",
name = "my-rstudio",
username = "tnf", password = "tnf",
predefined_type = "f1-micro")
?gce_vm_create
?gce_vm
vm <- gce_vm(template = "rstudio",
name = "my-rstudio",
username = "tnf", password = "tnf",
predefined_type = "f1-micro")
vm <- gce_vm_create(template = "rstudio",
name = "my-rstudio",
username = "tnf", password = "tnf",
predefined_type = "f1-micro", serviceAccounts = "foot-anothertry@foot-277620.iam.gserviceaccount.com")
vm <- gce_vm_template("r-base", predefined_type = "f1-micro", name = "rbase")
vm <- gce_vm_template(template = "rstudio",
name = "my-rstudio",
username = "tnf", password = "tnf",
predefined_type = "f1-micro")
# Read model data.
model.list <- readRDS(file = 'model_list.rds')
#* @param wt
#* @param qsec
#* @param am
#* @post /predict
CalculatePrediction <- function(equipe1, equipe2, is_friendly, where){
is_friendly = as.logical(is_friendly)
X.new <- tibble(equipe1 = equipe1, equipe2 = equipe2, is_friendly = is_friendly, where = where)
y.pred <- model.list$GetNewPredictions(model1 = model.list$model1,
model2 = model.list$model2,
newdata = X.new)
return(y.pred)
}
CalculatePrediction("France", "Brazil", TRUE)
library(tidyverse)
CalculatePrediction("France", "Brazil", TRUE)
CalculatePrediction("France", "Brazil", TRUE, "home")
CalculatePrediction("France", "Brazil", TRUE, "away")
setwd("~/ADMIN/The Nuum Factory/foot")
library(tidyverse)
df = read.csv("data.csv", stringsAsFactors = F) %>% tbl_df
df$date = lubridate::ymd(df$date)
df$is_friendly = df$tournament=="Friendly"
df$years_passed = 2020-lubridate::year(df$date) + 10
df1 = df %>% setNames(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where = "home")
df2 = df %>% setNames(c("date", "equipe2", "equipe1", "buts2", "buts1",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where="away") %>% select(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed", "where"))
df = rbind(df1, df2)
df$victoire = "victoire"
df$victoire[df$buts1==df$buts2] = "nul"
df$victoire[df$buts1<df$buts2] = "defaite"
df$victoire = factor(df$victoire)
df$weights = 1/df$years_passed
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>5)
#df$equipe1 = factor(df$equipe1)
#df$equipe2 = factor(df$equipe2)
ctrl = trainControl(method="none")
library(caret)
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights)
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl)
mymodel_buts2 = train(buts2~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl)
topredict = data.frame("equipe1"="France", "equipe2"="England", "is_friendly"=TRUE, "where"="away")
topredict = data.frame("equipe1"="England", "equipe2"="France", "is_friendly"=TRUE, "where"="away")
topredict = data.frame("equipe1"="France", "equipe2"="Estonia", "is_friendly"=TRUE, "where"="away")
predict(mymodel_victory, newdata = topredict)
predict(mymodel_buts1, newdata = topredict)
predict(mymodel_buts2, newdata = topredict)
GetNewPredictions <- function(model1, model2, newdata){
#newdata.transformed <- predict(object = transformer, newdata = newdata)
new.predictions1 <- predict(object = model1, newdata = newdata)#.transformed)
new.predictions2 <- predict(object = model2, newdata = newdata)#.transformed)
return(paste0("resultat match: ", newdata$equipe1, " ", round(new.predictions1, 1), " - ",
round(new.predictions2, 1), " ", newdata$equipe2))
}
# Define Output object.
model.list <- vector(mode = 'list')
# Save fitted model.
model.list$model1 <- mymodel_buts1
model.list$model2 <- mymodel_buts2
# Save transformation function.
model.list$GetNewPredictions <- GetNewPredictions
setwd("~/ADMIN/The Nuum Factory/foot")
library(tidyverse)
df = read.csv("data.csv", stringsAsFactors = F) %>% tbl_df
df$date = lubridate::ymd(df$date)
df$is_friendly = df$tournament=="Friendly"
df$years_passed = 2020-lubridate::year(df$date) + 10
df1 = df %>% setNames(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where = "home")
df2 = df %>% setNames(c("date", "equipe2", "equipe1", "buts2", "buts1",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where="away") %>% select(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed", "where"))
df = rbind(df1, df2)
df$victoire = "victoire"
df$victoire[df$buts1==df$buts2] = "nul"
df$victoire[df$buts1<df$buts2] = "defaite"
df$victoire = factor(df$victoire)
df$weights = 1/df$years_passed
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>5)
ctrl = trainControl(method="none")
library(caret)
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights)
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl)
mymodel_buts2 = train(buts2~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl)
topredict = data.frame("equipe1"="France", "equipe2"="England", "is_friendly"=TRUE, "where"="away")
topredict = data.frame("equipe1"="England", "equipe2"="France", "is_friendly"=TRUE, "where"="away")
topredict = data.frame("equipe1"="France", "equipe2"="Estonia", "is_friendly"=TRUE, "where"="away")
predict(mymodel_victory, newdata = topredict)
predict(mymodel_buts1, newdata = topredict)
predict(mymodel_buts2, newdata = topredict)
GetNewPredictions <- function(model1, model2, newdata){
#newdata.transformed <- predict(object = transformer, newdata = newdata)
new.predictions1 <- predict(object = model1, newdata = newdata)#.transformed)
new.predictions2 <- predict(object = model2, newdata = newdata)#.transformed)
return(paste0("resultat match: ", newdata$equipe1, " ", round(new.predictions1, 1), " - ",
round(new.predictions2, 1), " ", newdata$equipe2))
}
# Define Output object.
model.list <- vector(mode = 'list')
# Save fitted model.
model.list$model1 <- mymodel_buts1
model.list$model2 <- mymodel_buts2
# Save transformation function.
model.list$GetNewPredictions <- GetNewPredictions
topredict
predict(mymodel_victory, newdata = df%>%head(5))
df$predicted = predict(mymodel_victory, newdata = df)
df
df2 = df %>% sample_n(1000)
set.seed(1)
df2 = df %>% sample_n(1000)
df2$predicted = predict(mymodel_victory, newdata = df2)
df2
set.seed(1234)
df2 = df %>% sample_n(1000)
df2$predicted = predict(mymodel_victory, newdata = df2)
df2 = df %>% sample_n(1)
df2$predicted = predict(mymodel_victory, newdata = df2)
setwd("~/ADMIN/The Nuum Factory/foot")
library(tidyverse)
df = read.csv("data.csv", stringsAsFactors = F) %>% tbl_df
df$date = lubridate::ymd(df$date)
df$is_friendly = df$tournament=="Friendly"
df$years_passed = 2020-lubridate::year(df$date) + 10
df1 = df %>% setNames(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where = "home")
df2 = df %>% setNames(c("date", "equipe2", "equipe1", "buts2", "buts1",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where="away") %>% select(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed", "where"))
df = rbind(df1, df2)
df$victoire = "victoire"
df$victoire[df$buts1==df$buts2] = "nul"
df$victoire[df$buts1<df$buts2] = "defaite"
df$victoire = factor(df$victoire)
df$weights = 1/df$years_passed
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>5)
#df$equipe1 = factor(df$equipe1)
#df$equipe2 = factor(df$equipe2)
ctrl = trainControl(method="none")
library(caret)
df_ = df %>% sample_n(5)
df_ = df %>% ungroup() %>% sample_n(5)
df_$predicted = predict(mymodel_victory, newdata = df_)
df_
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n())
df_
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>10)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_
df_ = df_ %>% ungroup() %>% sample_n(10)
df_
df_$predicted = predict(mymodel_victory, newdata = df_)
setwd("~/ADMIN/The Nuum Factory/foot")
library(tidyverse)
df = read.csv("data.csv", stringsAsFactors = F) %>% tbl_df
df$date = lubridate::ymd(df$date)
df$is_friendly = df$tournament=="Friendly"
df$years_passed = 2020-lubridate::year(df$date) + 10
df1 = df %>% setNames(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where = "home")
df2 = df %>% setNames(c("date", "equipe2", "equipe1", "buts2", "buts1",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where="away") %>% select(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed", "where"))
df = rbind(df1, df2)
df$victoire = "victoire"
df$victoire[df$buts1==df$buts2] = "nul"
df$victoire[df$buts1<df$buts2] = "defaite"
df$victoire = factor(df$victoire)
df$weights = 1/df$years_passed
df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>5)
df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>25)
df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
ctrl = trainControl(method="none")
library(caret)
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights)
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(10)
df_$predicted = predict(mymodel_victory, newdata = df_)
df_
df_$predicted = predict(mymodel_victory, newdata = df_, type="prob")
df_
predict(mymodel_victory, newdata = df_, type="prob")
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = df_ %>% bind_cols(preds)
df_ = cbind.data.frame(df_, preds)
df_
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
hist(df_$prob_nul)
df_$pred = predict(mymodel_victory, newdata = df_)
table(df_$pred)
table(df_$victoire)
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
df_$
df_$pred
df_$pred
df_$pred[df_$prob_nul>0.3]="nul"
table(df_$pred)
table(df_$victoire)
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
table(df_$victoire==df_$pred) %>% prop.table()
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire==df_$pred) %>% prop.table()
table(df_$victoire, df_$pred)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
df_$pred[df_$prob_nul>0.25]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
df_$pred[df_$prob_nul>0.35]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
df_$pred[df_$prob_nul>0.3]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
getModelInfo("knn")
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights, k=5)
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights, tuneGrid = expand.grid(k = 5))
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights, tuneGrid = expand.grid(k = 7))
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 7))
mymodel_buts2 = train(buts2~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 7))
table(df_$victoire, df_$pred) %>% prop.table()
table(df_$victoire, df_$pred)
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire, df_$pred)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
preds = predict(mymodel_victory, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
df_ = cbind.data.frame(df_, preds)
df_$pred = predict(mymodel_victory, newdata = df_)
table(df_$victoire==df_$pred) %>% prop.table()
table(df_$victoire, df_$pred)
df_$pred[df_$prob_nul>0.4]="nul"
table(df_$victoire==df_$pred) %>% prop.table()
df_$pred[df_$prob_nul>0.3]="nul"
table(df_$victoire, df_$pred)
table(df_$victoire==df_$pred) %>% prop.table()
preds = predict(mymodel_buts1, newdata = df_, type="prob") %>% setNames(c("prob_defaite", "prob_nul"," prob_victoire"))
preds = predict(mymodel_buts1, newdata = df_)
preds
df_ = cbind.data.frame(df_, preds)
df_
table(df_$buts1, df_$preds)
plot(x=df_$buts1, y=df_$preds)
ggplot(df_) + aes(x=df_$buts1, y=df_$preds) + geom_point() + geom_smooth(method="lm")
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl)
preds = predict(mymodel_buts1, newdata = df_)
ggplot(df_) + aes(x=df_$buts1, y=df_$preds) + geom_point() + geom_smooth(method="lm")
RMSE(df_$buts1, df$preds)
RMSE(df_$buts1, df_$preds)
ggplot(df_) + aes(x=df_$buts1, y=df_$preds) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
df$pred = predict(mymodel_buts1, newdata = df_)
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
df$pred = predict(mymodel_buts1, newdata = df_)
df_$pred = predict(mymodel_buts1, newdata = df_)
ggplot(df_) + aes(x=df_$buts1, y=df_$pred) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
df_$pred2 = predict(mymodel_buts2, newdata = df_)
ggplot(df_) + aes(x=df_$buts2, y=df_$pred2) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
RMSE(df_$buts2, df_$pred2)
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 7), weights = df$weights)
mymodel_buts2 = train(buts2~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 7),  weights = df$weights)
set.seed(1234)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
df_$pred = predict(mymodel_buts1, newdata = df_)
df_$pred2 = predict(mymodel_buts2, newdata = df_)
ggplot(df_) + aes(x=df_$buts1, y=df_$pred) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
ggplot(df_) + aes(x=df_$buts2, y=df_$pred2) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
RMSE(df_$buts1, df_$pred)
RMSE(df_$buts2, df_$pred2)
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>25)
df$weights
hist(df$weights)
summary(df$years_passed)
df$weights = 1/(df$years_passed-10)
setwd("~/ADMIN/The Nuum Factory/foot")
library(tidyverse)
df = read.csv("data.csv", stringsAsFactors = F) %>% tbl_df
df$date = lubridate::ymd(df$date)
df$is_friendly = df$tournament=="Friendly"
df$years_passed = 2020-lubridate::year(df$date) + 10
df1 = df %>% setNames(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where = "home")
df2 = df %>% setNames(c("date", "equipe2", "equipe1", "buts2", "buts1",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed")) %>%
mutate(where="away") %>% select(c("date", "equipe1", "equipe2", "buts1", "buts2",
"tournament", "city", "country", "neutral", "is_friendly", "years_passed", "where"))
df = rbind(df1, df2)
df$victoire = "victoire"
df$victoire[df$buts1==df$buts2] = "nul"
df$victoire[df$buts1<df$buts2] = "defaite"
df$victoire = factor(df$victoire)
df$weights = 1/(df$years_passed-10)
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>25)
ctrl = trainControl(method="none")
library(caret)
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights, tuneGrid = expand.grid(k = 7))
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 3), weights = df$weights)
mymodel_buts2 = train(buts2~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 3),  weights = df$weights)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
df_$pred = predict(mymodel_buts1, newdata = df_)
df_$pred2 = predict(mymodel_buts2, newdata = df_)
df = df %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
ctrl = trainControl(method="none")
library(caret)
mymodel_victory = train(victoire~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, weights = df$weights, tuneGrid = expand.grid(k = 7))
mymodel_buts1 = train(buts1~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 3), weights = df$weights)
mymodel_buts2 = train(buts2~equipe1+equipe2+is_friendly+where, data=df, method="knn", trControl =ctrl, tuneGrid = expand.grid(k = 3),  weights = df$weights)
df_ = df %>% ungroup() %>% group_by(equipe1, equipe2) %>% mutate(n=n()) %>% filter(n>50)
df_ = df_ %>% ungroup() %>% sample_n(1000)
df_$pred = predict(mymodel_buts1, newdata = df_)
df_$pred2 = predict(mymodel_buts2, newdata = df_)
ggplot(df_) + aes(x=df_$buts1, y=df_$pred) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
ggplot(df_) + aes(x=buts1, y=pred) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
ggplot(df_) + aes(x=buts2, y=pred2) + geom_point() + geom_smooth(method="lm") + geom_abline(slope=1, intercept = 0)
RMSE(df_$buts1, df_$pred)
RMSE(df_$buts2, df_$pred2)
df$buts1%>%mean
df$buts2%>%mean
ggplot(df) + aes(x=years_passed, y=buts1) + geom_point() + geom_smooth(method="lm")
ggplot(df) + aes(x=years_passed, y=buts1) + geom_point() + geom_smooth(method="loess")
ggplot(df%>% sample_n(1000)) + aes(x=years_passed, y=buts1) + geom_point(alpha=0.2) + geom_smooth(method="loess", size=2)
ggplot(df%>% ungroup %>%sample_n(1000)) + aes(x=years_passed, y=buts1) + geom_point(alpha=0.2) + geom_smooth(method="loess", size=2)
ggplot(df%>% ungroup %>%sample_n(10000)) + aes(x=years_passed, y=buts1) + geom_point(alpha=0.2) + geom_smooth(method="loess", size=2)
ggplot(df%>% ungroup %>%sample_n(10000)) + aes(x=years_passed, y=buts1) + geom_point(alpha=0.2) + geom_smooth(method="loess", size=2)
ggplot(df%>% ungroup %>%sample_n(5000)) + aes(x=years_passed, y=buts1) + geom_point(alpha=0.2) + geom_smooth(method="loess", size=2)
